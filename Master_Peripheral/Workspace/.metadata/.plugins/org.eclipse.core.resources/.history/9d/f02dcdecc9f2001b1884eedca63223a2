/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>

#define RCC_BASE_ADDRESS			0x40023800UL
#define GPIOA_BASE_ADDRESS			0x40020000UL

#define RCC_CFGR_OFFSET				0x08UL
#define RCC_CFGR					(RCC_BASE_ADDRESS + RCC_CFGR_OFFSET)
#define RCC_CFGR_VALUE				*(uint32_t*) RCC_CFGR

#define RCC_AHB1ENR_OFFSET			0x30UL
#define RCC_AHB1ENR					(RCC_BASE_ADDRESS + RCC_AHB1ENR_OFFSET)
#define RCC_AHB1ENR_VALUE			*(uint32_t*) RCC_AHB1ENR

#define GPIOA_MODER_OFFSET			0x00UL
#define GPIOA_MODER					(GPIOA_BASE_ADDRESS + GPIOA_MODER_OFFSET)
#define GPIOA_MODER_VALUE			*(uint32_t*) GPIOA_MODER

#define GPIOA_AFRH_OFFSET			0x24UL
#define GPIOA_AFRH					(GPIOA_BASE_ADDRESS + GPIOA_AFRH_OFFSET)
#define GPIOA_AFRH_VALUE			*(uint32_t*) GPIOA_AFRH

int main(void)
{
    /* Setting MCO1 */
	// Select source to MCO1 to measurement: HSI
	RCC_CFGR_VALUE &= ~(0x3<<21);
	RCC_CFGR_VALUE |= (1<<26);
	RCC_CFGR_VALUE |= (1<<25);

	/* Setting GPIOA */
	// Enable clock for GPIOA
	RCC_AHB1ENR_VALUE |= (0x1);

	// Select Alternate mode for PA8
	GPIOA_MODER_VALUE &= ~(0x3<<16); // Clear
	GPIOA_MODER_VALUE |= (0x2<<16);  // Set

	// Set AF0 to PA8
	GPIOA_AFRH_VALUE &= (0xFFFFFFF0);
	for(;;);
}
